#!/usr/bin/env bash

#-----------------------------------------------------------------------------
# The wireguard configuration file (wg0.conf). Absolute path. Root readable
#-----------------------------------------------------------------------------

WGCONF="${HOME}/my-vpn-wg0.conf"
LOCAL_SUBNET="10.1.2.3/24"
TIMEZONE="Asia/Hong_Kong"

#-----------------------------------------------------------------------------

NAME=alpine-wireguard
DOCKER="sudo docker"
CMD=$(basename $0)
SHFMT="${DOCKER} run --rm -v $PWD:/mnt -w /mnt mvdan/shfmt"

#-----------------------------------------------------------------------------

if [ "$CMD" == "help" ]; then
  echo
  echo "Commands:"
  echo "- help  - display available commands"
  echo "- build - build image"
  echo "- clean - remove container"
  echo "- run   - create & run container"
  echo "- stop  - stop container"
  echo "- start - start container"
  echo "- bash  - launch bash shell inside container"
  echo "- logs	- show docker logs"
  echo "- ps	- show process tree inside container"
  echo "- ip	- display host and container gateways"
  echo
fi

#-----------------------------------------------------------------------------

if [ "$CMD" == "fmt" ] && [ "$1" != "" ]; then
  $SHFMT -s -p -i 2 $1
fi

#-----------------------------------------------------------------------------

if [ "$CMD" == "build" ]; then
  ${DOCKER} build -t ${NAME} . || echo "Nothing to build"
fi

#-----------------------------------------------------------------------------

if [ "$CMD" == "stop" ]; then
  ${DOCKER} exec -it ${NAME} /bin/s6-svscanctl -t /var/run/s6/services || echo "No container running or failed to shutdown (s6)."
  sleep 3
  ${DOCKER} stop ${NAME} || echo "No running container to stop."
fi

#-----------------------------------------------------------------------------

if [ "$CMD" == "start" ]; then
  ${DOCKER} start ${NAME}
fi

#-----------------------------------------------------------------------------

if [ "$CMD" == "run" ]; then
  ${DOCKER} run --detach --name ${NAME} \
    --cap-add=NET_ADMIN \
    --privileged \
    --network=bridge \
    --sysctl net.ipv6.conf.all.disable_ipv6=1 \
    \
    -v ${WGCONF}:/etc/wireguard/wg0.conf:ro \
    -e LOCAL_SUBNET=${LOCAL_SUBNET} \
    \
    -e TZ=${TIMEZONE} \
    -v /etc/localtime:/etc/localtime:ro \
    \
    ${NAME}
fi

#-----------------------------------------------------------------------------

if [ "$CMD" == "bash" ]; then
  ${DOCKER} exec -it ${NAME} /bin/bash || echo "No container running."
fi

#-----------------------------------------------------------------------------

if [ "$CMD" == "logs" ]; then
  ${DOCKER} logs -f ${NAME}
fi

#-----------------------------------------------------------------------------

if [ "$CMD" == "ps" ]; then
  ${DOCKER} exec -it ${NAME} pstree -p
fi

#-----------------------------------------------------------------------------

if [ "$CMD" == "ip" ]; then
  _HIP=$(curl ipinfo.io/ip 2>/dev/null)
  echo "Host Gateway: ${_HIP}"
  _RIP=$(${DOCKER} exec -it ${NAME} /usr/bin/curl ipinfo.io/ip 2>/dev/null || echo 'none found.')
  echo "Container Gateway: ${_RIP}"
fi

#-----------------------------------------------------------------------------

if [ "$CMD" == "clean" ]; then
  ${DOCKER} rm ${NAME} || echo "No container to remove."
fi
